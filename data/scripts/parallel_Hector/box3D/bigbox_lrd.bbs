/* Beatbox example bbs scripts for FHN, CRN, LRD cell to 3D simulations. 
 * This is distributed with the SVN repository. Use these bbs scripts to make your 
 * own as most of the devices are shown here. 
 * 
 * To run the bbs script sequentially at the command line (in a terminal), use: 
 *  Beatbox_SEQ name_of_bbs_script.bbs <input to bbs script> -verbose -profile 
 * 
 * This program simulates FHN CRN LRD 0D (cell) 1D 2D 3D box 3D geometry. The geometry is the ffr.bbg geometry. 
 *        
 */ 
// Script D.2 for bigbox_lrd.bbs
<lrd.par>
def int neqn [iext];

/* The size of the model is xmax*ymax*zmax*vmax 
 * where vmax is the number of dynamical variables in the cell model of ODEs. 
 * xmax=1, ymax=1, zmax=1 represents a cell (OD) model, while 
 * all other values of xmax, ymax, zmax represent tissue models. 
 */ 
state xmax=302 ymax=302 zmax=302 vmax=[iext]+1;

/* Declare global timing variables. In general: 
 * begin is for when the simulation begins, 
 * often, seldom, once, paceout are for output rates (see the k_func device), 
 * end is often used in the examples to set up the stopping criterion using stop device, 
 * stop is the variable used to indicate time for end of simulation not using the stop device. 
 */ 
def real begin;
def real end;
def real often;

/* Assign values to the timing parameters using Beatbox functions for 
 * greater than (ge), less than (le), modulus (mod), etc. 
 */ 
k_func name=timing ;nowhere=1 pgm={
begin=eq(t,0);
often = eq(mod(t,10),0);
end=ge(t,1000);
};

// Stimulus
/* Apply stimulus to tissue specified by x0,x1,y0,y1,z0,z1. If 
 * any of these are not specified, then the max or min values are presumed 
 */ 
k_func when=begin x0=18 x1=22 y0=18 y1=22 z0=18 z1=22 pgm={u[V]=Vmax;};

// The computation
/* Compute the Laplacian. */ 
diff v0=[V] v1=[iext] D=D hx=hx;
/* Computation of 1 time step update. 
 * In spatial simulations, the Laplacian is stored at Iu=@vmax. 
 */ 
euler v0=[V] v1=neqn-1 ht=ht ode=lrd rest=10000 par={ht=ht Iu=@[iext]};

ppmout
   when=often
   file="out/[0]_%04d.ppm" mode=" w "
   r=[V]    r0=Vmin r1=Vmax 
   g=[xi]   g0=0    g1=1
   b=[dvdt] b0=0    b1=1
;

rem record
x0 =35 x1=35
y0 =35 y1=35
z0 =35 z1=35
v0 =[V] v1=neqn-1
filehead ="SCALING TEST"
file=out/[0].rec mode=append
;

rem /* Dump all state variables from all nodes into a binary file for future use. */ 
dump when=often append=0 file=out/[0].dmp;

/* Stopping criterion. This is mandatory.*/ 
stop when=end;
end;

